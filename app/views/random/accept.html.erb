<script src="//maps.google.com/maps/api/js?key=AIzaSyBqCYFsvqoNiLgEDx1k0z7x7FNEaeThT3c&lsensor=false&libraries=geometry"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>

<!-- Display -->
<div class="col-md-6">
      <p class="lead">You have accepted the challenge at: </p>
      <h1><%= @name %></h1>
      <% if (@img_url) %>
      <p> <%= image_tag @img_url, class: "img-thumbnail" %> </p>
      <% else %>
      <p><%= image_tag @img_placeholder, class: "img-thumbnail" %></p>
      <% end %>

      <p class="lead" id="confirm"></p>
      <% if logged_in? %>
<<<<<<< HEAD
        <%= link_to random_success_path, class: "btn btn-success" do %>
           Check In <span class="glyphicon glyphicon-ok"></span>
        <% end %>
        
       
        
      <% end %>
      
      
=======
        <%= button_to "Check In Button", random_addpoints_path(:destlat => @bus_lat, :destlong => @bus_lng, :name => @name, 
        :imgurl => @img_url), :disabled => true, class: "btn btn-success", id: 'success' %>
      <% end %>
>>>>>>> cfe0088... merge with locationhis
</div>


<div class="col-md-6">
      <!-- Map -->
      <div class="embed-responsive embed-responsive-16by9">
        <div id="directions" class="embed-responsive-item" style="border: 1px solid black"></div>
      </div>
</div>


<!--User Location -->
<script type="text/javascript">

  // getLocation - uses geolocation to obtain user location
  function getLocation()
  {
    if (navigator.geolocation)
      navigator.geolocation.getCurrentPosition(setGeoCookie, handleError);
    else
      alert("Geolocation is not supported by this browser.");
  }

  // setGeoCookie - creates a cookie to store user location
  function setGeoCookie(position)
  {
    var cookie_val = position.coords.latitude + "|" + position.coords.longitude;
    document.cookie = "lat_lng=" + escape(cookie_val);
  }

  // handleError - gets called when geolocation permission is denied by user
  function handleError(err)
  {
     // err.code: 1 = permission denied, 2 = pos unavailable, 3 = timeout
  }

  getLocation(); // Ask for user location
</script>


<!-- Distance Calc -->
<script>
<<<<<<< HEAD
document.getElementById("success").style.display="none";
var ulat = <%= @user_lat %>;
var ulng = <%= @user_lng %>;
var dlat = <%= @destlat %>;
var dlong = <%= @destlong %>;

var p1 = new google.maps.LatLng(ulat, ulng);
var p2 = new google.maps.LatLng(dlat,dlong);

var d = calcDistance(p1, p2);


	if(d <= 10){
=======
  // document.getElementById("success").style.display="none";
  var ulat = <%= @user_lat %>;
  var ulng = <%= @user_lng %>;
  var dlat = <%= @destlat %>;
  var dlong = <%= @destlong %>;
  
  var p1 = new google.maps.LatLng(ulat, ulng);
  var p2 = new google.maps.LatLng(dlat,dlong);
  
  var d = calcDistance(p1, p2);

// distance range
	if(d <= 500000){
>>>>>>> cfe0088... merge with locationhis
		document.getElementById("confirm").innerHTML = "You are at the destination!";
		// document.getElementById("success").style.display="block";
		document.getElementById("success").disabled = false;
	}else{
		document.getElementById("confirm").innerHTML = "You are currently "+ d +" KM from the destination, " + "Please go to the restaurant to finish the challenge.";
	}

//calculates distance between two points in km's
	function calcDistance(p1, p2) {
 	 return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);
	}

</script>


<!-- Map js -->
<script type="text/javascript">
var directionsDisplay = new google.maps.DirectionsRenderer();
var directionsService = new google.maps.DirectionsService();

function calcRoute(position) {
  var usrlat = <%= @user_lat %>;
  var usrlong = <%= @user_lng %>;
  var buslat = <%= @destlat %>;
  var buslong = <%= @destlong %>;
  var origin      = new google.maps.LatLng(usrlat,usrlong);
  var destination = new google.maps.LatLng(buslat, buslong);

  var request = {
    origin:      origin,
    destination: destination,
    travelMode:  google.maps.TravelMode.DRIVING
  };

  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    }
  });
}

calcRoute();

var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'directions'}}, function(){
  directionsDisplay.setMap(handler.getMap());
});
</script>







